{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\New folder (2)\\\\CODING\\\\MyReads 3.0\\\\starter\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  books,\n  updateShelf\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchBooks, setSearchBooks] = useState([]);\n\n  const updateQuery = query => {\n    setQuery(query.trim()); // trim white spaces from query\n\n    BooksAPI.search(query, 10).then(resultBooks => {\n      // search = (query, maxResults)\n      setSearchBooks(resultBooks);\n    });\n  };\n\n  const clearQuery = () => {\n    updateQuery(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        onClick: clearQuery,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: event => {\n            updateQuery(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: checkedBks.map((book, index) => {\n          return /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            changeShelf: changeShelf,\n            shelf: book.shelf\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"N/WthlUSDkDYRNscDv1+UcnKQ3c=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/New folder (2)/CODING/MyReads 3.0/starter/src/components/Search.js"],"names":["React","useState","Link","Book","BooksAPI","Search","books","updateShelf","query","setQuery","searchBooks","setSearchBooks","updateQuery","trim","search","then","resultBooks","clearQuery","event","target","value","checkedBks","map","book","index","changeShelf","shelf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMW,WAAW,GAAIJ,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAK,CAACK,IAAN,EAAD,CAAR,CAD6B,CACL;;AACxBT,IAAAA,QAAQ,CAACU,MAAT,CAAgBN,KAAhB,EAAuB,EAAvB,EAA2BO,IAA3B,CAAiCC,WAAD,IAAiB;AAC/C;AACAL,MAAAA,cAAc,CAACK,WAAD,CAAd;AACD,KAHD;AAID,GAND;;AAQA,QAAMC,UAAU,GAAG,MAAM;AACvBL,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAsC,QAAA,OAAO,EAAEK,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kCAFd;AAGE,UAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBN,YAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGC,UAAU,CAACC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,8BAAO,QAAC,IAAD;AAAkB,YAAA,IAAI,EAAED,IAAxB;AAA8B,YAAA,WAAW,EAAEE,WAA3C;AAAwD,YAAA,KAAK,EAAEF,IAAI,CAACG;AAApE,aAAWF,KAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAzCD;;GAAMnB,M;;KAAAA,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./Book\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\n\r\nconst Search = ({ books, updateShelf }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchBooks, setSearchBooks] = useState([]);\r\n\r\n  const updateQuery = (query) => {\r\n    setQuery(query.trim()); // trim white spaces from query\r\n    BooksAPI.search(query, 10).then((resultBooks) => {\r\n      // search = (query, maxResults)\r\n      setSearchBooks(resultBooks);\r\n    });\r\n  };\r\n\r\n  const clearQuery = () => {\r\n    updateQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\" onClick={clearQuery}>\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={(event) => {\r\n              updateQuery(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {checkedBks.map((book, index) => {\r\n            return <Book key={index} book={book} changeShelf={changeShelf} shelf={book.shelf} />;\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}